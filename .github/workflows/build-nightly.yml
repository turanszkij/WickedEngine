name: Nightly Build

on:
  schedule:
    - cron:  '0 0 * * *'

jobs:
  windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: nuget/setup-nuget@v1
      with:
        nuget-api-key: ${{ secrets.NuGetAPIKey }}
    - run: nuget restore WickedEngine.sln
    - name: Build
      shell: cmd
      run: |
        "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/MSBuild/Current/Bin/MSBuild.exe" WickedEngine.sln /p:Configuration=Release /p:Platform=x64
    
    - name: Move binaries
      shell: cmd
      run: |
        move BUILD\x64\Release\Editor_Windows\Editor_Windows.exe Editor\
        xcopy WickedEngine\dxcompiler.dll Editor\
        
        move BUILD\x64\Release\Tests\Tests.exe Tests\
        xcopy WickedEngine\dxcompiler.dll Tests\
        
    - name: Package Editor
      uses: actions/upload-artifact@v2
      with:
        name: Editor (Windows x64)
        path: |
          WickedEngine/shaders/*.cso
          WickedEngine/shaders/hlsl6/*.cso
          WickedEngine/shaders/spirv/*.cso
          images/
          models/
          scripts/
          Documentation/
          README.md
          LICENSE.md
          other_licenses.txt
          features.txt
          Editor/images/
          Editor/sound/
          Editor/*.ini
          Editor/*.ico
          Editor/*.lua
          Editor/*.exe
          Editor/*.dll
          
    - name: Package Tests
      uses: actions/upload-artifact@v2
      with:
        name: Tests (Windows x64)
        path: |
          WickedEngine/shaders/*.cso
          WickedEngine/shaders/hlsl6/*.cso
          WickedEngine/shaders/spirv/*.cso
          images/
          models/
          scripts/
          Documentation/
          README.md
          LICENSE.md
          other_licenses.txt
          features.txt
          Tests/images/
          Tests/sound/
          Tests/*.ini
          Tests/*.ico
          Tests/*.lua
          Tests/*.ttf
          Tests/*.exe
          Tests/*.dll

    
  linux:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        wget -qO - https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -
        sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-1.2.162-focal.list https://packages.lunarg.com/vulkan/1.2.162/lunarg-vulkan-1.2.162-focal.list
        sudo apt update
        sudo apt install vulkan-sdk
        sudo apt install libsdl2-dev

    - name: Build
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        make
        
    - name: Move binaries
      run: |
        mv build/Editor/WickedEngineEditor Editor/
        mv build/Tests/Tests Tests/
        
    - name: Package Editor
      uses: actions/upload-artifact@v2
      with:
        name: Editor (Ubuntu 20.04)
        path: |
          WickedEngine/shaders/*.cso
          WickedEngine/shaders/hlsl6/*.cso
          WickedEngine/shaders/spirv/*.cso
          images/
          models/
          scripts/
          Documentation/
          README.md
          LICENSE.md
          other_licenses.txt
          features.txt
          Editor/images/
          Editor/sound/
          Editor/*.ini
          Editor/*.ico
          Editor/*.lua
          Editor/WickedEngineEditor
          
    - name: Package Tests
      uses: actions/upload-artifact@v2
      with:
        name: Tests (Ubuntu 20.04)
        path: |
          WickedEngine/shaders/*.cso
          WickedEngine/shaders/hlsl6/*.cso
          WickedEngine/shaders/spirv/*.cso
          images/
          models/
          scripts/
          Documentation/
          README.md
          LICENSE.md
          other_licenses.txt
          features.txt
          Tests/images/
          Tests/sound/
          Tests/*.ini
          Tests/*.ico
          Tests/*.lua
          Tests/*.ttf
          Tests/Tests
