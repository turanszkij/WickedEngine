name: Build

on:
  push:
    branches: [ master ]

env:
  CCACHE_VERSION: 4.11.3
  CCACHE_MAXSIZE: 500Mi
  # see https://ccache.dev/manual/latest.html#_precompiled_headers
  CCACHE_SLOPPINESS: pch_defines,time_macros,include_file_mtime,include_file_ctime

jobs:
  
  windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Initial compile
      shell: cmd
      run: |
        "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/MSBuild/Current/Bin/MSBuild.exe" WickedEngine.sln /t:OfflineShaderCompiler /m /p:Configuration=Release /p:Platform=x64
    - name: Generate shader dump
      shell: cmd
      run: |
        cd "WickedEngine"
        "../BUILD/x64/Release/OfflineShaderCompiler/OfflineShaderCompiler.exe" hlsl6 spirv shaderdump strip_reflection
    - name: Recompile with shader dump
      shell: cmd
      run: |
        "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/MSBuild/Current/Bin/MSBuild.exe" WickedEngine.sln /t:clean /m /p:Configuration=Release /p:Platform=x64
        "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/MSBuild/Current/Bin/MSBuild.exe" WickedEngine.sln /t:Editor_Windows /m /p:Configuration=Release /p:Platform=x64
    
    - name: Move files
      shell: cmd
      run: |
        move BUILD\x64\Release\Editor_Windows\Editor_Windows.exe .\
        move Editor\config.ini .\
        move Editor\startup.lua .\
        move Editor\languages .\
        move Editor\fonts .\

    - name: Package Editor
      uses: actions/upload-artifact@v4
      with:
        name: Editor (Windows)
        path: |
          languages/
          fonts/
          config.ini
          startup.lua
          Editor_Windows.exe


  linux:
    runs-on: ubuntu-latest
    name: linux (${{ matrix.cc }})
    strategy:
      fail-fast: false
      matrix:
        include:
        - cc: gcc
          cxx: g++
          package_bins: true
        - cc: clang
          cxx: clang++
          package_bins: false

    steps:
    - uses: actions/checkout@v4

    - name: Restore Ccache database
      id: restore-ccache
      uses: actions/cache/restore@v4
      with:
        path: ~/.cache/ccache
        key: ccache-${{ matrix.cc }}-${{ github.run_id }}
        restore-keys: ccache-${{ matrix.cc }}-

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install libsdl2-dev ccache

    - name: Initial compile
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DWICKED_USE_IPO=NO
        make -j$(nproc)
    - name: Generate shader dump
      run: |
        cd build/WickedEngine
        ./offlineshadercompiler spirv rebuild shaderdump
        mv wiShaderDump.h ../../WickedEngine/

    - name: Recompile with shader dump
      run: |
        cd build
        make -j $(nproc)

    - name: Save Ccache database
      id: save-ccache
      if: always() && steps.restore-ccache.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        path: ~/.cache/ccache
        key: ${{ steps.restore-ccache.outputs.cache-primary-key }}

    - name: Move files
      if: matrix.package_bins
      run: |
        mv build/Editor/Editor ./Editor_Linux
        mv Editor/config.ini ./
        mv Editor/startup.lua ./
        mv Editor/fonts ./

    - name: Package Editor
      if: matrix.package_bins
      uses: actions/upload-artifact@v4
      with:
        name: Editor (Linux)
        path: |
          fonts/
          config.ini
          startup.lua
          Editor_Linux

  content:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Package Content
      uses: actions/upload-artifact@v4
      with:
        name: Content
        path: |
          Content/Documentation
          Content/models
          Content/scripts
          Content/terrain
